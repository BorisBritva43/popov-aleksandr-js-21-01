// 1. Написать скрипт, предлогающий пользователю ввести две строки через запятую. Вывести сообщение true, если вторая строка содержится в первый, в противном случае false, регистр при проверке не учитывать.

// const quest = prompt('Введите две строки через запятую', '');
// const res1 = quest.match(/[^\w,]*/i); // Находим все до запятой
// const res2 = quest.match(/[^\w,]*$/i);// После запятой
// alert(res1.toString() === res2.toString());

const queOne = prompt('Первое предложение');
const queTwo = prompt('Второе предложение');
alert(queOne.includes(queTwo));

// ---------------------------------------------------

// --- 2. Пользователь вводит строку, затем число (кол-во символов). Функция усекает строку до кол-ва символов и добавляет многоточие. ---
// - Исправленно -
const commonStr = prompt('Введите строку, затем число');
const commonRgx = commonStr.match(/\d/gi, '');
alert(`${commonStr.slice(0, commonRgx)}...`);

// --- 3. Заменить дату и время 12/03/2020 12-30 на 12.03.2020 12:30 ---

// - Исправленно -
const askTime = prompt('Введите дату и время');
const regTest = askTime.replace(/[/]/g, ".");
const resultTest = regTest.replace(/[-]/g, ":");
alert(resultTest);

// ------------------------------------------------------

// --- 4. Написать функцию, валидирующую ФИО из кирилличиских символов (считать, что отчество может оканчиваться только на "вна" или "вич" или может отсутствовать) ---

const fio = prompt('Введите ваше ФИО', '');
const fioValidate = /^[а-яА-яёЁ]+ [а-яА-яёЁ]+( [а-яА-яёЁ]*)?$/;
alert(fioValidate.test(fio));


// -----------------------------------------------------

// --- 5. На вход дана строка в CamalCase, преобразовать строку в snake_case ---

// - Исправленно -
const camalCase = prompt('Введите строку в CamalCase', '');
const camalRgx = (camalCase.match(/([A-zА-я])([a-zа-я]+)/gm)).toString();
const toLower = camalRgx.toLowerCase();
alert(toLower.replace(/[,]/g, '_'));

// ------------------------------------------------------

// --- 6. На вход даётся многострочная строка, найти и вернуть через alert все html комментарии ---

// - Исправленно -
const htmlComment = prompt('Введите комментарии');
const regexp = /<!--.*?-->/gm;
alert(htmlComment.match(regexp));

// -----------------------------------------------------

// --- 7. На вход дана строка, вернуть через alert все числа (десятичные разделяются сиволом ".") ---

// - Работает корректно - ввод строки: str 23 2.45 5.6 - возвращает: 2.45,5.6 -
const customNumbers = prompt('Введите числа в том числе десятичные');
alert(customNumbers.match(/\d+\.\d+/g));

// ------------------------------------------------------

// --- 8. Валидация введённого значения. Вводится идентификатор документа. Идентификатор должен состоять из четырёх частей по четыре символа,разделённых или не разделённых знаком "-". Допускаются только символы латинского алфавита и числа. Вывести через alert "ведётся поиск", при соответствии введённого значения, или "неверный илентификатор", при несоответствии. При несоответствии снова вывести форму для ввода строки. ---

while (true) {
   const ident = prompt('Введите занчение идентификатора документа');
   const identValid = /^\w{4}-\w{4}-\w{4}-\w{4}$/;

   if (identValid.test(ident)) {
      alert('ведется поиск...')
      break;
   }

   alert('Неверное значение. Введите еще раз');

}

